<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.satoru.blog.mapper.ArticleMapper">
    <!--根据文章分类、文章标题来查询符号该条件的文章总数-->
    <select id="queryCount" resultType="int">
        select count(1) from article
        where true
        <if test="title != null and title != ''">
            and title like concat('%', #{title}, '%')
        </if>
        <if test="articleTypeId != null and articleTypeId != 0">
            and article_type_id in
            (select article_type_id from article_type where article_type_id = #{articleTypeId} or parent_node = #{articleTypeId})
        </if>
        ;
    </select>

    <!--存放一个分页文章的结果集-->
    <resultMap id="article" type="com.satoru.blog.model.Article">
        <id property="articleId" column="article_id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="startTime" column="start_time" />
        <result property="updateTime" column="update_time" />
        <result property="viewedNumber" column="viewed_number" />
        <result property="praiseNumber" column="praise_number" />
        <result property="commentNumber" column="comment_number" />
        <result property="deleteTag" column="delete_tag" />
        <result property="topTag" column="top_tag" />
        <association property="articleType" javaType="com.satoru.blog.model.ArticleType">
            <result property="articleTypeId" column="article_type_id" />
            <result property="typeName" column="type_name" />
            <result property="parentNode" column="parent_node" />
        </association>
        <association property="user" javaType="com.satoru.blog.model.User">
            <result property="uid" column="uid" />
            <result property="nickname" column="nickname" />
            <result property="avatar" column="avatar" />
        </association>
    </resultMap>

    <!--根据分页、条件查询获取一个分页内的文章简略信息-->
    <select id="queryArticlePage" resultMap="article" resultType="com.satoru.blog.model.Article">
        select
            a.article_id, a.article_type_id,
	        t.type_name, t.parent_node,
	        u.uid, u.nickname, u.avatar,
	        a.title, a.content, a.start_time, a.update_time, a.viewed_number, a.praise_number,
	        (select count(1) from comment where comment.article_id = a.article_id) as comment_number
	    from article as a, article_type as t, `user` as u
	    where a.article_type_id = t.article_type_id
        <if test="articleTypeId != null and articleTypeId != 0">
            and a.article_type_id in (select article_type_id from article_type where article_type_id = #{articleTypeId} or parent_node = #{articleTypeId})
        </if>
        <if test="title != null and title != ''">
            and a.title like concat('%', #{title}, '%')
        </if>
	    and a.uid = u.uid
        ORDER BY a.start_time DESC
	    limit #{index}, #{pageSize};
    </select>

    <!--获取1个文章的信息-->
    <select id="queryOneById" resultMap="article" resultType="com.satoru.blog.model.Article">
        select
            a.article_id, a.article_type_id,
	        t.type_name, t.parent_node,
	        u.uid, u.nickname, u.avatar,
	        a.title, a.content, a.start_time, a.update_time, a.viewed_number, a.praise_number,
            a.delete_tag, a.top_tag, (select count(1) from comment where comment.article_id = #{id}) as comment_number
	    from article as a, article_type as t, `user` as u
	    where a.article_type_id = t.article_type_id and a.uid = u.uid and a.article_id = #{id};
    </select>

    <!--添加一个文章-->
    <insert id="insert">
        INSERT INTO blog.article
	        (article_type_id, uid, title, content)
	    VALUES(#{articleType.articleTypeId}, #{user.uid},
	    #{title}, #{content});
    </insert>

    <!--通过id更新一个文章-->
    <update id="updateById">
        update article set
            article_type_id=#{articleType.articleTypeId},
            title = #{title},
            content = #{content},
            delete_tag = #{deleteTag},
            top_tag = #{topTag}
        where article_id = #{articleId};
    </update>

    <!--通过id增加文章的访问数-->
    <update id="addViewsById">
        update article set
                viewed_number = viewed_number + 1
        where article_id = #{id};
    </update>

    <!--通过id增加文章的点赞数-->

    <!--通过id删除一个文章-->
    <delete id="deleteById">
        DELETE FROM blog.article
        WHERE article_id = #{id}
    </delete>

</mapper>